{"version":3,"sources":["/Users/se/www/maintined/rkta-ui/src/Theme/defaultRenderrer.jsx","/Users/se/www/maintined/rkta-ui/src/util/invariant.js","/Users/se/www/maintined/rkta-ui/src/Theme/withStyle.jsx","/Users/se/www/maintined/rkta-ui/src/atoms/Atom/index.jsx","/Users/se/www/maintined/rkta-ui/src/atoms/Bage/Bage.mdx","/Users/se/www/maintined/rkta-ui/src/atoms/Bage/index.jsx","/Users/se/www/maintined/rkta-ui/src/atoms/Font/index.jsx","/Users/se/www/maintined/rkta-ui/src/atoms/Paper/shadows.js","/Users/se/www/maintined/rkta-ui/src/atoms/Paper/index.jsx"],"names":["defaultRenderrer","Component","_ref","href","rest","Object","objectWithoutProperties","react_default","a","createElement","assign","element","pickProps","context","props","elementName","ref","theme","children","_context$theme$elemen","defaultStyle","styles","_Object$keys$reduce","keys","reduce","acc","key","value","nextStyle","nextProps","defineProperty","objectSpread","css","modifyStyles","withStyle","Element","displayName","WithStyle","forwardRef","Context","Consumer","_ref2","modifyElement","providerIsMissing","condition","message","Error","invariant","contextType","concat","Atom","atomRef","getColor","location","changeTheme","touchDetected","_Users_se_www_maintined_rkta_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","defaultProps","RawAtom","layoutProps","MDXLayout","MDXContent","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","mdxType","id","parentName","className","docz__WEBPACK_IMPORTED_MODULE_3__","of","RawBage","__position","__code","__scope","this","Playground","Props","Bage","__codesandbox","___WEBPACK_IMPORTED_MODULE_4__","primary","secondary","color","success","fitRight","hardRight","color12","fitAll","hard","warning","fitLeft","hardLeft","isMDXComponent","react__WEBPACK_IMPORTED_MODULE_1___default","_Paper__WEBPACK_IMPORTED_MODULE_2__","rounded","overline","nowrap","Font","react__WEBPACK_IMPORTED_MODULE_2___default","_Atom__WEBPACK_IMPORTED_MODULE_4__","nextCss","_Users_se_www_maintined_rkta_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","getFontProps","propTypes","PropTypes","node","oneOfType","string","number","func","isRequired","shadowKeyUmbraOpacity","shadowKeyPenumbraOpacity","shadowAmbientShadowOpacity","shadows","map","px","join","Paper","rize","size","length","boxShadow","cssSize","width","height","modifyProps"],"mappings":"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AG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACnC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACnC,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACpC,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACpC,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GACrC,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GACrC,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GACrC,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GACrC,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GACtC,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GACtC,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GACtC,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GACtC,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GACtC,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GACtC,CAAC,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GACvC,CAAC,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GACvC,CAAC,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GACvC,CAAC,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GACvC,CAAC,EAAG,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GACxC,CAAC,EAAG,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GACxC,CAAC,EAAG,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GACxC,CAAC,EAAG,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GACxC,CAAC,EAAG,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,IACxCC,IAjCF,SAAsBC,GACpB,MAAO,IAAArE,OACFqE,EAAG,GADD,OAAArE,OACSqE,EAAG,GADZ,OAAArE,OACoBqE,EAAG,GADvB,OAAArE,OAC+BqE,EAAG,GADlC,kBAAArE,OACqDgE,EADrD,QAAAhE,OAEFqE,EAAG,GAFD,OAAArE,OAESqE,EAAG,GAFZ,OAAArE,OAEoBqE,EAAG,GAFvB,OAAArE,OAE+BqE,EAAG,GAFlC,kBAAArE,OAEqDiE,EAFrD,QAAAjE,OAGFqE,EAAG,GAHD,OAAArE,OAGSqE,EAAG,GAHZ,OAAArE,OAGoBqE,EAAG,IAHvB,OAAArE,OAGgCqE,EAAG,IAHnC,kBAAArE,OAGuDkE,EAHvD,MAILI,KAAK,OCYHC,EAAQlF,qBAAW,SAACxB,EAAOE,GAAR,OAAgBT,EAAAC,EAAAC,cAAC0F,EAAA,EAAD9F,OAAAK,OAAA,CAAMyC,QAASnC,GAdpC,SAAAd,GAA0C,IAAvC8B,EAAuC9B,EAAvC8B,IAAKyF,EAAkCvH,EAAlCuH,KAAMC,EAA4BxH,EAA5BwH,KAAgB5G,GAAYZ,EAAtBe,MAAsBZ,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gCACtDoG,EAAU,GAMhB,GALImB,GAAQA,EAAOL,EAAQO,OAAS,GAClCtH,OAAOK,OAAO4F,EAAS,CACrBsB,UAAWR,EAAQK,KAGnBC,EAAM,CACR,IAAMG,EAAO,GAAA5E,OAAMyE,EAAN,MACbrH,OAAOK,OAAO4F,EAAS,CAAEwB,MAAOD,EAASE,OAAQF,IAEnD,OAAOxH,OAAA0B,EAAA,EAAA1B,CAAA,CAAEM,QAAS,OAAUG,EAA5B,CAAmCkB,IAAI3B,OAAA0B,EAAA,EAAA1B,CAAA,GAAMiG,EAAYtE,KAGMgG,CAAYlH,OAE7E0G,EAAMpF,YAAc,QACpBoF,EAAMf,UAAY,CAChBgB,KAAMf,IAAUI,OAChBY,KAAMhB,IAAUI,QAElBU,EAAM9D,aAAe,CACnB+D,KAAM,EACNC,KAAM,GAGOxF,gBAAUsF","file":"static/js/atoms-bage-bage.3554036f.js","sourcesContent":["import React from 'react';\n\nconst defaultRenderrer = (Component, { href, ...rest }) => {\n  if (href) return <Component {...rest} element=\"a\" href={href} />;\n  return <Component {...rest} />;\n};\n\nexport default defaultRenderrer;\n","export default (condition, message) => {\n  if (!condition) throw new Error(message);\n};\n","import React, { forwardRef } from 'react';\n\nimport Context from './Context';\nimport defaultRenderrer from './defaultRenderrer';\nimport invariant from '../util/invariant';\n\nconst modifyStyles = (context, { children, ...props }, element, ref) => {\n  const { defaultStyle, ...styles } = context.theme[element];\n\n  // const nextProps = {};\n  // const nextStyle = { ...defaultStyle };\n\n  // const keys = Object.keys(props);\n\n  // for (let i = 0; i < keys.length; i += 1) {\n  //   const key = keys[i];\n  //   const value = props[key];\n  //   if (value === true && key in styles) Object.assign(nextStyle, styles[key]);\n  //   else if (!(key in styles)) nextProps[key] = value;\n  // }\n\n  const { nextStyle, nextProps } = Object.keys(props).reduce(\n    (acc, key) => {\n      const value = props[key];\n      if (value === true && key in styles) Object.assign(acc.nextStyle, styles[key]);\n      else if (!(key in styles)) Object.assign(acc.nextProps, { [key]: value });\n      return acc;\n    },\n    {\n      nextProps: {},\n      nextStyle: { ...defaultStyle },\n    },\n  );\n  const css = { ...nextStyle, ...props.css };\n  return { ...nextProps, ...context, children, css, ref };\n};\n\nconst pickProps = (context, props, elementName, ref) => {\n  if (elementName in context.theme) return modifyStyles(context, props, elementName, ref);\n  return { ...props, ...context, ref };\n};\n\nconst withStyle = (Element, key) => {\n  const { displayName } = Element;\n  const WithStyle = forwardRef((props, ref) => (\n    <Context.Consumer>\n      {({ modifyElement, providerIsMissing, ...context }) => {\n        invariant(!providerIsMissing, 'Please use the Provider');\n        const render = modifyElement || defaultRenderrer;\n        return render(Element, pickProps(context, props, key || displayName, ref));\n      }}\n    </Context.Consumer>\n  ));\n  WithStyle.contextType = Context;\n  WithStyle.displayName = displayName;\n  Element.displayName = `Styled ${displayName}`; // eslint-disable-line no-param-reassign\n  return WithStyle;\n};\n\nexport default withStyle;\n","/** @jsx jsx */\nimport PropTypes from 'prop-types';\nimport { jsx } from '@emotion/core';\n\nconst Atom = ({\n  css,\n  element: Element,\n  getColor, // eslint-disable-line react/prop-types\n  location, // eslint-disable-line react/prop-types\n  theme, // eslint-disable-line react/prop-types\n  changeTheme, // eslint-disable-line react/prop-types\n  atomRef,\n  touchDetected, // eslint-disable-line react/prop-types\n  ...rest\n}) => <Element {...rest} css={css} ref={atomRef} />;\n\nAtom.propTypes = {\n  atomRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({})]),\n  css: PropTypes.oneOfType([PropTypes.shape({}), PropTypes.func]),\n  element: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n};\n\nAtom.defaultProps = {\n  atomRef: null,\n  css: null,\n  element: 'div',\n};\nAtom.displayName = 'Atom';\n\nexport const RawAtom = Atom;\n\nexport default Atom;\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport Bage, { RawBage } from './';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"bage\"\n    }}>{`Bage`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Bage } from 'rkta-ui';\n`}</code></pre>\n    <p>{`Bage is a preconfigured sheet of paper, which can be used in different ways.\nUnlike it's done in Material UI R•K•T•A Bages are not opinionated about their positions.`}</p>\n    <h3 {...{\n      \"id\": \"composition\"\n    }}>{`Composition`}</h3>\n    <p>{`Bage `}{`←`}{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"/src-atoms-paper-paper\"\n      }}>{`Paper`}</a>{` `}{`←`}{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"/src-atoms-paper-paper\"\n      }}>{`Font`}</a>{` `}{`←`}{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"/src-atoms-atom-atom\"\n      }}>{`Atom`}</a></p>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={RawBage} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"basic-example\"\n    }}>{`Basic example`}</h3>\n    <Playground __position={1} __code={'<Bage primary>A bage</Bage>\\n<Bage secondary color=\\\"paper\\\">\\n  A bage\\n</Bage>\\n<Bage success>A bage</Bage>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Bage,\n      RawBage\n    }} __codesandbox={``} mdxType=\"Playground\">\n  <Bage primary mdxType=\"Bage\">A bage</Bage>\n  <Bage secondary color=\"paper\" mdxType=\"Bage\">\n    A bage\n  </Bage>\n  <Bage success mdxType=\"Bage\">A bage</Bage>\n    </Playground>\n    <h3 {...{\n      \"id\": \"fitting-bages-together\"\n    }}>{`Fitting bages together`}</h3>\n    <Playground __position={2} __code={'<Bage primary fitRight hardRight>\\n  A bage\\n</Bage>\\n<Bage color12 fitAll hard>\\n  A bage\\n</Bage>\\n<Bage warning fitLeft hardLeft>\\n  A bage\\n</Bage>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Bage,\n      RawBage\n    }} __codesandbox={``} mdxType=\"Playground\">\n  <Bage primary fitRight hardRight mdxType=\"Bage\">\n    A bage\n  </Bage>\n  <Bage color12 fitAll hard mdxType=\"Bage\">\n    A bage\n  </Bage>\n  <Bage warning fitLeft hardLeft mdxType=\"Bage\">\n    A bage\n  </Bage>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Paper from '../Paper';\nimport withStyle from '../../Theme/withStyle';\n\nconst Bage = ({ fitAll, fitLeft, fitRight, ...rest }) => (\n  <Paper rounded overline nowrap {...rest} />\n);\n\nBage.displayName = 'Bage';\nBage.propTypes = {\n  /** Reset Margins */\n  fitAll: PropTypes.bool,\n  /** Reset Left Margin */\n  fitLeft: PropTypes.bool,\n  /** Reset Right Margin */\n  fitRight: PropTypes.bool,\n};\nBage.defaultProps = {\n  fitAll: false,\n  fitLeft: false,\n  fitRight: false,\n};\n\nexport const RawBage = Bage;\n\nexport default withStyle(Bage);\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Atom from '../Atom';\nimport withStyle from '../../Theme/withStyle';\n\nconst getFontProps = (color, getColor, rest) => {\n  const nextCss = { ...rest.css, color: getColor(color) };\n  return { ...rest, css: nextCss };\n};\n\nconst Font = forwardRef(({ children, getColor, color, ...rest }, ref) => (\n  <Atom element=\"span\" atomRef={ref} {...getFontProps(color, getColor, rest)}>\n    {children}\n  </Atom>\n));\n\nFont.displayName = 'Font';\nFont.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  getColor: PropTypes.func.isRequired,\n};\nFont.defaultProps = {\n  children: null,\n  color: '',\n};\n\nexport default withStyle(Font);\n","const shadowKeyUmbraOpacity = 0.2;\nconst shadowKeyPenumbraOpacity = 0.14;\nconst shadowAmbientShadowOpacity = 0.12;\n\nfunction createShadow(px) {\n  return [\n    `${px[0]}px ${px[1]}px ${px[2]}px ${px[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`,\n    `${px[4]}px ${px[5]}px ${px[6]}px ${px[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`,\n    `${px[8]}px ${px[9]}px ${px[10]}px ${px[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`,\n  ].join(',');\n}\n\nexport default [\n  [0, 1, 3, 0, 0, 1, 1, 0, 0, 2, 1, -1],\n  [0, 1, 5, 0, 0, 2, 2, 0, 0, 3, 1, -2],\n  [0, 1, 8, 0, 0, 3, 4, 0, 0, 3, 3, -2],\n  [0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0],\n  [0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0],\n  [0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0],\n  [0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1],\n  [0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2],\n  [0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2],\n  [0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3],\n  [0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3],\n  [0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4],\n  [0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4],\n  [0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4],\n  [0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5],\n  [0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5],\n  [0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5],\n  [0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6],\n  [0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6],\n  [0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7],\n  [0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7],\n  [0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7],\n  [0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8],\n  [0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8],\n].map(createShadow);\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Font from '../Font';\nimport withStyle from '../../Theme/withStyle';\nimport shadows from './shadows';\n\nconst modifyProps = ({ css, rize, size, theme, ...props }) => {\n  const nextCss = {};\n  if (rize && rize < shadows.length - 1) {\n    Object.assign(nextCss, {\n      boxShadow: shadows[rize],\n    });\n  }\n  if (size) {\n    const cssSize = `${size}px`;\n    Object.assign(nextCss, { width: cssSize, height: cssSize });\n  }\n  return { element: 'div', ...props, css: { ...nextCss, ...css } };\n};\n\nconst Paper = forwardRef((props, ref) => <Font atomRef={ref} {...modifyProps(props)} />);\n\nPaper.displayName = 'Paper';\nPaper.propTypes = {\n  rize: PropTypes.number,\n  size: PropTypes.number,\n};\nPaper.defaultProps = {\n  rize: 0,\n  size: 0,\n};\n\nexport default withStyle(Paper);\n"],"sourceRoot":""}